str_detect("Hallo", "H")
if(!require(dplyr)){
install.packages("dplyr")
require(dplyr)
}
if(!require(data.table)){
install.packages("data.table")
require(data.table)
}
if(!require(ggplot2)){
install.packages("ggplot2")
require(ggplot2)
}
if(!require(fitdistrplus)){
install.packages("fitdistrplus")
require(fitdistrplus)
}
if(!require(goft)){
install.packages("goft")
require(goft)
}
if(!require(tidyverse)){
install.packages("tidyverse")
require(tidyverse)
}
df_K7 <- fread('D:/UNI/IDA CaseStudy/Data/Logistikverzug/Komponente_K7.csv')        #Extract production date from here
df_logistic_delay = fread('D:/UNI/IDA CaseStudy/Data/Logistikverzug/Logistikverzug_K7.csv') #Extract receiving date from here
#Merge both dataframes and keep relevant columns (production - receiption - ID-Number)
df_combi = dplyr::select(merge(df_K7, df_logistic_delay, by='IDNummer'), 'IDNummer', 'Produktionsdatum', 'Wareneingang')
#Convert character to date datatype
df_combi$Wareneingang <- as.Date(df_combi$Wareneingang, "%d.%m.%Y")
df_combi$Produktionsdatum <- as.Date(df_combi$Produktionsdatum, "%Y-%m-%d")
#Calculate logistic delay as difference of Production and receiving date
df_combi$delay = as.numeric(df_combi$Wareneingang - df_combi$Produktionsdatum)
#Registrations:
Zulassungen = fread("D:/UNI/IDA CaseStudy/Data/Zulassungen/Zulassungen_alle_Fahrzeuge.csv", header = TRUE )
Bestandteile_Fahrzeuge_1 <- fread('D:/UNI/IDA CaseStudy/Data/Fahrzeug/Bestandteile_Fahrzeuge_OEM1_Typ11.csv', header=TRUE)
Bestandteile_Fahrzeuge_2 <- fread('D:/UNI/IDA CaseStudy/Data/Fahrzeug/Bestandteile_Fahrzeuge_OEM1_Typ12.csv', header=TRUE)
Bestandteile_Fahrzeuge_3 <- fread('D:/UNI/IDA CaseStudy/Data/Fahrzeug/Bestandteile_Fahrzeuge_OEM2_Typ21.csv', header=TRUE)
Bestandteile_Fahrzeuge_4 <- fread('D:/UNI/IDA CaseStudy/Data/Fahrzeug/Bestandteile_Fahrzeuge_OEM2_Typ22.csv', header=TRUE)
#Rename First column of Bestandteile_Fahrzeuge_4 from "X1" to "V1" and merge all files together
colnames(Bestandteile_Fahrzeuge_4)[1] = 'V1'
Bestandteile_Fahrzeuge_complete <- rbind(Bestandteile_Fahrzeuge_1, Bestandteile_Fahrzeuge_2, Bestandteile_Fahrzeuge_3, Bestandteile_Fahrzeuge_4)
str_detect("Hallo", "H")
head(Bestandteile_Fahrzeuge_complete %>% filter(str_detect("K7")))
head(Bestandteile_Fahrzeuge_complete %>% filter(ID_Fahrzeug, str_detect("K7")))
head(Bestandteile_Fahrzeuge_complete %>% filter(str_detect(ID_Fahrzeug, "K7")))
head(Bestandteile_Fahrzeuge_complete %>% filter(str_detect(ID_Karosserie, "K7")))
nrow(Bestandteile_Fahrzeuge_complete %>% filter(str_detect(ID_Karosserie, "K7")))
K7_Cars_ID <- dplyr::select(Bestandteile_Fahrzeuge_complete %>% filter(str_detect(ID_Karosserie, "K7")), ID_Fahrzeug)
K7_cars_Dortmund <- K7_Cars_ID %>% merge(Zulassungen, by.x='ID_Fahrzeug', by.y='IDNummer') %>% filter(Gemeinden == 'DORTMUND')
K7_cars_Dortmund <- K7_Cars_ID %>% merge(Zulassungen, by.x='ID_Fahrzeug', by.y='IDNummer') %>% filter(Gemeinden == 'DORTMUND')
#Now we have a data frame containing all cars with component K7 that are registered in Dortmund
#Get the number of those cars by counting the rows of that data frame
nrow(K7_cars_Dortmund)
summary(Zulassungen)
str(Zulassungen)
View(Bestandteile_Fahrzeuge_complete)
head(Bestandteile_Fahrzeuge_complete)
head(Zulassungen)
#Wanted ID:
ID_wanted <- "K1BE2-104-1041-32049"
ID_Car <- Bestandteile_Fahrzeuge_complete %>% filter(ID_Motor == ID_wanted)["ID_Fahrzeug"]
head(Bestandteile_Fahrzeuge_complete)
ID_Car <- Bestandteile_Fahrzeuge_complete %>% filter(ID_Motor == ID_wanted)
#Wanted ID:
ID_wanted <- "K1BE2-104-1041-32049"
ID_Car <- Bestandteile_Fahrzeuge_complete %>% filter(ID_Motor == ID_wanted) %>% select("IDNummer")
#Wanted ID:
ID_wanted <- "K1BE2-104-1041-32049"
ID_Car <- Bestandteile_Fahrzeuge_complete %>% filter(ID_Motor == ID_wanted) %>% select("ID_Fahrzeug")
#Wanted ID:
ID_wanted <- "K1BE2-104-1041-32049"
ID_Car <- Bestandteile_Fahrzeuge_complete %>% filter(ID_Motor == ID_wanted) %>% dplyr::select("ID_Fahrzeug")
Zulassungen %>% filter(IDNummer == ID_Car) %>% dplyr::select("Gemeinden")
ID_Car
head(Zulassungen)
Zulassungen %>% filter(IDNummer == ID_Car)
Zulassungen %>% filter(str_detect(IDNummer, ID_Car))
Zulassungen %>% filter(str_detect("IDNummer", ID_Car))
ID_Car
ID_Car[1]
ID_Car[[1]
]
ID_Car <- Bestandteile_Fahrzeuge_complete %>% filter(ID_Motor == ID_wanted) %>% dplyr::select("ID_Fahrzeug")[]
ID_Car <- Bestandteile_Fahrzeuge_complete %>% filter(ID_Motor == ID_wanted) %>% dplyr::select("ID_Fahrzeug")[1]
#Wanted ID:
ID_wanted <- "K1BE2-104-1041-32049"
ID_Car <- Bestandteile_Fahrzeuge_complete %>% filter(ID_Motor == ID_wanted) %>% dplyr::select("ID_Fahrzeug")
Zulassungen %>% filter(IDNummer == ID_Car[[1]]) %>% dplyr::select("Gemeinden")
fit.lognormal <- fitdist(df_combi$delay, "lnorm")
fit.lognormal
plot(fit.gamma)
fit.gamma <- fitdist(df_combi$delay, "gamma")
fit.gamma <- fitdist(df_combi$delay, "gamma")
plot(fit.gamma)
shiny::runApp('D:/UNI/Uni Synchro/DAP/Projekt/Gruppe_05_DQE2019')
runApp('D:/UNI/Uni Synchro/DAP/Projekt/Gruppe_05_DQE2019')
runApp('D:/UNI/Uni Synchro/DAP/Projekt/Gruppe_05_DQE2019')
