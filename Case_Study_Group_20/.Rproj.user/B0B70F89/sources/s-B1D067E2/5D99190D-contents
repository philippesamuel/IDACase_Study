---
title: "shinyy"
author: "Damien Chan and Zikry Khazid"
date: "7/15/2019"
output: html_document
runtime: shiny
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
**Question 1** 

Import relevant records from the provided tubcloud folder.

Firstly, we import some libraries which will be needed for our analysis
```{r message=FALSE, warning=FALSE}
library(data.table)
library(dplyr)
library(ggplot2)
library(tidyverse)

```

Then, we will import the relevant records.

```{r}
Zulassungen_alle_Fahrzeuge = fread("Data/Zulassungen/Zulassungen_alle_Fahrzeuge.csv",header = TRUE )

Bestandteile_Fahrzeuge_OEM1_Typ11 = fread('Data/Fahrzeug/Bestandteile_Fahrzeuge_OEM1_Typ11.csv',header=TRUE)

Bestandteile_Fahrzeuge_OEM1_Typ12 = fread('Data/Fahrzeug/Bestandteile_Fahrzeuge_OEM1_Typ12.csv',header=TRUE)

Bestandteile_Fahrzeuge_OEM2_Typ21 = fread('Data/Fahrzeug/Bestandteile_Fahrzeuge_OEM2_Typ21.csv',header=TRUE)

Bestandteile_Fahrzeuge_OEM2_Typ22 = fread('Data/Fahrzeug/Bestandteile_Fahrzeuge_OEM2_Typ22.csv',header=TRUE)
```

**Question 2** 

After importing the data needed, it's time to do some tidying on the data
```{r}
#Rename Bestandteile_Fahrzeuge_OEM2_Typ22 first column from "X1" to "V1" so that an rbind can be done
colnames(Bestandteile_Fahrzeuge_OEM2_Typ22)[1] = 'V1'

#merge all cars details vertically
allcars = rbind(Bestandteile_Fahrzeuge_OEM1_Typ11,Bestandteile_Fahrzeuge_OEM1_Typ12,Bestandteile_Fahrzeuge_OEM2_Typ21,Bestandteile_Fahrzeuge_OEM2_Typ22)

#This merge gives the komponents together with the date
komponentsdates = select(merge(allcars,Zulassungen_alle_Fahrzeuge,by.x='ID_Fahrzeug',by.y='IDNummer'),ID_Karosserie,ID_Schaltung,ID_Sitze,ID_Motor,Zulassung)
```

```{r}
#substr is used to get first 2 characters of k4k5k6k7 components and first 5 characters of k1k2k3 components
komponentsdatesk4k5k6k7 = as.data.frame(sapply(komponentsdates[,1],substr,start=1,stop=2))
komponentsdatesk1k2k3 = as.data.frame(sapply(komponentsdates[,2:4],substr,start=1,stop=5))
komponentsdatesALL = cbind(komponentsdatesk1k2k3,komponentsdatesk4k5k6k7,komponentsdates$Zulassung)
colnames(komponentsdatesALL)[5] = 'Zulassung'

#substr is used to get the year part of the date
komponentsdatesALL$Zulassung = as.character(komponentsdatesALL$Zulassung)
komponentsdatesALL$Zulassung = sapply(komponentsdatesALL$Zulassung,substr,start=1,stop=4)

#groupby and summarize functions are used to get the year and the number of each component.Then we use spread to tidy the data.
komponentsdatesALL %>% arrange(Zulassung) %>% group_by(Zulassung,ID_Motor) %>% summarize(count=n()) %>% spread(key='Zulassung',value='count') -> k1
komponentsdatesALL %>% arrange(Zulassung) %>% group_by(Zulassung,ID_Sitze) %>% summarize(count=n()) %>% spread(key='Zulassung',value='count')-> k2
komponentsdatesALL %>% arrange(Zulassung) %>% group_by(Zulassung,ID_Schaltung) %>% summarize(count=n()) %>% spread(key='Zulassung',value='count')-> k3

komponentsdatesALL %>% arrange(Zulassung) %>% group_by(Zulassung,ID_Karosserie) %>% summarize(count=n()) %>% spread(key='Zulassung',value='count')-> k4k5k6k7

#Finally, we combine k1,k2,k3 and k4k5k6k7 together to get the number of each component per year
colnames(k1)[1] = "komponent"
colnames(k2)[1] = "komponent"
colnames(k3)[1] = "komponent"
colnames(k4k5k6k7)[1] = "komponent"

komponentyear = rbind(k1,k2,k3,k4k5k6k7)
```

```{r}
komponentyear
```








